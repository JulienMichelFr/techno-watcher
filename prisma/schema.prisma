generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  email        String     @unique
  password     String
  posts        Post[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
  refreshToken String?
  comments     Comment[]
  invitation   Invitation @relation(fields: [invitationId], references: [id], onDelete: Cascade)
  invitationId Int        @unique
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  link      String
  content   String?
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  comments  Comment[]
  tags      String[]
}

model Comment {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  content         String
  author          User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId        Int
  post            Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId          Int
  parentCommentId Int?
  parentComment   Comment?  @relation("ParentComment", fields: [parentCommentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments        Comment[] @relation("ParentComment")
}

model Invitation {
  id   Int    @id @default(autoincrement())
  code String @unique @default(uuid())
  user User?
}
